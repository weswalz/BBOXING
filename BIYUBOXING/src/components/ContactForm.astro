---
export interface Props {
  formType?: 'contact' | 'fighter' | 'vip';
  showMessage?: boolean;
}

const { formType = 'contact', showMessage = true } = Astro.props;
---

<form class="space-y-6" method="POST" action="/api/contact">
  <input type="hidden" name="formType" value={formType} />
  
  <div class="grid md:grid-cols-2 gap-4">
    <div class="form-control">
      <label class="label">
        <span class="label-text">First Name *</span>
      </label>
      <input 
        type="text" 
        name="firstName"
        placeholder="Enter your first name" 
        class="input input-bordered" 
        required 
      />
    </div>
    
    <div class="form-control">
      <label class="label">
        <span class="label-text">Last Name *</span>
      </label>
      <input 
        type="text" 
        name="lastName"
        placeholder="Enter your last name" 
        class="input input-bordered" 
        required 
      />
    </div>
  </div>
  
  <div class="form-control">
    <label class="label">
      <span class="label-text">Email *</span>
    </label>
    <input 
      type="email" 
      name="email"
      placeholder="your@email.com" 
      class="input input-bordered" 
      required 
    />
  </div>
  
  <div class="form-control">
    <label class="label">
      <span class="label-text">Phone Number</span>
    </label>
    <input 
      type="tel" 
      name="phone"
      placeholder="+1 (xxx) xxx-xxxx" 
      class="input input-bordered" 
    />
  </div>
  
  {showMessage && (
    <div class="form-control">
      <label class="label">
        <span class="label-text">Message *</span>
      </label>
      <textarea 
        name="message"
        class="textarea textarea-bordered h-32" 
        placeholder="How can we help you?"
        required
      ></textarea>
    </div>
  )}
  
  {formType === 'fighter' && (
    <>
      <div class="grid md:grid-cols-2 gap-4">
        <div class="form-control">
          <label class="label">
            <span class="label-text">Weight Class</span>
          </label>
          <select name="weightClass" class="select select-bordered">
            <option disabled selected>Select weight class</option>
            <option>Flyweight</option>
            <option>Bantamweight</option>
            <option>Featherweight</option>
            <option>Lightweight</option>
            <option>Welterweight</option>
            <option>Middleweight</option>
            <option>Light Heavyweight</option>
            <option>Cruiserweight</option>
            <option>Heavyweight</option>
          </select>
        </div>
        
        <div class="form-control">
          <label class="label">
            <span class="label-text">Boxing Record</span>
          </label>
          <input 
            type="text" 
            name="record"
            placeholder="e.g., 10-2-1" 
            class="input input-bordered" 
          />
        </div>
      </div>
      
      <div class="form-control">
        <label class="label">
          <span class="label-text">Links to Fight Videos</span>
        </label>
        <input 
          type="text" 
          name="videos"
          placeholder="YouTube, Instagram, etc." 
          class="input input-bordered" 
        />
      </div>
    </>
  )}
  
  {formType === 'vip' && (
    <div class="form-control">
      <label class="label">
        <span class="label-text">Birthday</span>
      </label>
      <input 
        type="date" 
        name="birthday"
        class="input input-bordered" 
      />
    </div>
  )}
  
  <div class="form-control mt-6">
    <button type="submit" class="btn btn-primary btn-lg w-full">
      {formType === 'vip' ? 'Join VIP List' : 'Submit'}
    </button>
  </div>
</form>

<script>
  // Handle form submission
  document.addEventListener('DOMContentLoaded', () => {
    const forms = document.querySelectorAll('form[action="/api/contact"]');
    
    forms.forEach(form => {
      form.addEventListener('submit', async (e) => {
        e.preventDefault();
        
        const formData = new FormData(form as HTMLFormElement);
        const data = Object.fromEntries(formData);
        
        // For now, just log the data
        console.log('Form submitted:', data);
        
        // Show success message
        alert('Thank you for your submission! We will get back to you soon.');
        
        // Reset form
        (form as HTMLFormElement).reset();
      });
    });
  });
</script>